buildscript {
    ext {
        springBootVersion = '3.1.5'
        queryDslVersion = '5.0.0'
        springfoxSwaggerVersion = '3.0.0'
        mysqlConnectorVersion = '8.0.23'
        junitVersion = '5.8.1'
        testcontainersVersion = '1.19.0'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'spring.playground'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    // === QueryDsl 시작 ===
    // ⭐ Spring boot 3.x 이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // === QueryDsl 끝 ===

    implementation "mysql:mysql-connector-java:${mysqlConnectorVersion}"

    // Redis 시작
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Redis 끝

    // Mongo 시작
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive"
    // Mongo 끝

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // === Swagger 시작 ===
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    // === Swagger 끝 ===

    // forTest
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter"
    testImplementation "org.testcontainers:junit-jupiter:1.19.0"
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

// === ⭐ QueryDsl 빌드 옵션 (선택) START ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}

// === ⭐ QueryDsl 빌드 옵션 (선택)  END ===